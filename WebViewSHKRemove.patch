diff --git a/Classes/JJGWebViewViewController.m b/Classes/JJGWebViewViewController.m
index 2264261..f0e7b70 100644
--- a/Classes/JJGWebViewViewController.m
+++ b/Classes/JJGWebViewViewController.m
@@ -68,7 +68,7 @@ return YES;
 	
 	UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
 	if (cell == nil) {
-		cell = [[[UITableViewCell alloc] initWithFrame:CGRectZero reuseIdentifier:CellIdentifier] autorelease];
+		cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier] autorelease];
 	}
 	
 	cell.textLabel.text = [sampleArray objectAtIndex:indexPath.row];
diff --git a/JJGWebView/Classes/JJGWebView.h b/JJGWebView/Classes/JJGWebView.h
index 53cc1a2..0b03d63 100644
--- a/JJGWebView/Classes/JJGWebView.h
+++ b/JJGWebView/Classes/JJGWebView.h
@@ -6,9 +6,11 @@
 //
 
 #import <UIKit/UIKit.h>
+#import <MessageUI/MessageUI.h>
+#import <MessageUI/MFMailComposeViewController.h>
+
+@interface JJGWebView : UIViewController <UITextFieldDelegate, UIWebViewDelegate, UIActionSheetDelegate, MFMailComposeViewControllerDelegate> {
 
-@interface JJGWebView : UIViewController <UITextFieldDelegate, UIWebViewDelegate, UIActionSheetDelegate> {
-	
 	IBOutlet UIToolbar *webViewToolbar;
 	IBOutlet UIWebView *webView;
 	IBOutlet UIActivityIndicatorView *activityIndicator;
@@ -19,7 +21,7 @@
 
 	UIActionSheet *actionButtonActionSheet;
 	NSURL *webViewURL;
-	
+
 }
 
 @property (nonatomic,retain) UIToolbar *webViewToolbar;
diff --git a/JJGWebView/Classes/JJGWebView.m b/JJGWebView/Classes/JJGWebView.m
index 78474b8..698f7ed 100644
--- a/JJGWebView/Classes/JJGWebView.m
+++ b/JJGWebView/Classes/JJGWebView.m
@@ -6,7 +6,6 @@
 //
 
 #import "JJGWebView.h"
-#import "SHK.h"
 
 
 @implementation JJGWebView
@@ -92,27 +91,62 @@
 #pragma mark IBAction outlets
 
 - (IBAction)actionButtonSelected:(id)sender {
-	
-	// @todo - first, check to make sure we don't already have an SHKItem instantiated...
-	
-	// Create the item to share (url from webView)
-	NSURL *url = [[webView request] URL];
-	NSString *currentTitle = [webView stringByEvaluatingJavaScriptFromString:@"document.title"];
-	SHKItem *item = [SHKItem URL:url title:currentTitle];
-	
-	// Get the ShareKit action sheet
-	SHKActionSheet *actionSheet = [SHKActionSheet actionSheetForItem:item];
-	
-	// Check if we're using an iPad or iPhone
-	if (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad) {
-		// For iPad: Display the action sheet over the bar button item.
-		// @todo - If a user repeatedly taps the action button, multiple popups appear, overlaying one another.
-		[actionSheet showFromBarButtonItem:actionButton animated:NO];
-	} else {
-		// For iPhone/iPod Touch: Display the action sheet over the entire window - otherwise cancel button is jinxed.
-		[actionSheet showInView:self.navigationController.view];
-	}
+    if (actionButtonActionSheet != nil) {
+        return;
+    }
+
+    // Get the url and title from webView.
+    NSURL *url = [[webView request] URL];
+
+    // Create an action sheet.
+    actionButtonActionSheet = [[UIActionSheet alloc] initWithTitle:[url absoluteString]
+                                                          delegate:self
+                                                 cancelButtonTitle:@"Cancel"
+                                            destructiveButtonTitle:nil
+                                                 otherButtonTitles:@"Email Link", @"Open in Browser", @"Post to Twitter", nil];
+
+    // Check if we're using an iPad or iPhone
+    if (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad) {
+        // For iPad: Display the action sheet over the bar button item.
+        // @todo - If a user repeatedly taps the action button, multiple popups appear, overlaying one another.
+        [actionButtonActionSheet showFromBarButtonItem:actionButton animated:NO];
+    } else {
+        // For iPhone/iPod Touch: Display the action sheet over the entire window - otherwise cancel button is jinxed.
+        [actionButtonActionSheet showInView:self.navigationController.view];
+    }
+}
 
+-(void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex {
+    NSURL *url = [[webView request] URL];
+    NSString *currentTitle = [webView stringByEvaluatingJavaScriptFromString:@"document.title"];
+
+    switch (buttonIndex) {
+        case 0: {
+            MFMailComposeViewController *picker = [[MFMailComposeViewController init] alloc];
+            picker.mailComposeDelegate = self;
+            [picker setSubject:@"Emailed Link"];
+            [picker setMessageBody:[NSString stringWithFormat:@"<a href=\"%@\">%@</a>", url, currentTitle] isHTML:YES];
+            [self presentModalViewController:picker animated:YES];
+            [picker release];
+
+            NSLog(@"%@", url);
+            NSLog(@"%@", currentTitle);
+            break;
+        }
+        case 1: {
+            NSLog(@"Clicked Browser");
+            break;
+        }
+        case 2: {
+            NSLog(@"Clicked Twitter");
+            break;
+        }
+        default:
+            break;
+        }
+
+    // Reset action button sheet.
+    actionButtonActionSheet = nil;
 }
 
 
